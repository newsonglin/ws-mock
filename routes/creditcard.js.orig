var express = require('express');
var util = require('util');
var router = express.Router();
var fs = require("fs");
var dateFormat = require('dateformat')
var needle = require('needle');
var PropertiesReader = require('properties-reader');
var appSettings = PropertiesReader(__dirname + '/../settings.properties');

var dpsURL = appSettings.get('dps.url');
console.log("DPS URL: " + dpsURL);

var isURL = require('is-url');
const uuidv4 = require('uuid/v4');

var options = {
    headers: { 'Content-Type': 'application/json', 'accept': 'text/plain' }
}

var ccDataDir = __dirname + "/../data/credit-card/";

router.get('/ccPay', function(req, res, next) {
    if (util.isUndefined(req.query.request)) {
        return next({ "message": "Query string is not passed", "status": 400 });
    }
    res.render('creditCardPayment', {
        title: 'Tower Mocks Credit Card Payment',
        requestKey: req.query.request
    });
});

router.post('/ccPayProcess', function(req, res, next) {

    var requestKey = req.body.requestKey
    var successUrl
    var filename = ccDataDir + requestKey + ".json";
    var dataObject = {}
    dataObject = require(filename)
    console.log(dataObject);
    successUrl = dataObject.successURL + '?result=' + requestKey
    dataObject.CardNumber = req.body.CardNumber
    dataObject.CardHolderName = req.body.CardHolderName
    dataObject.DateExpiry_1 = req.body.DateExpiry_1
    dataObject.DateExpiry_2 = req.body.DateExpiry_2
    dataObject.Cvc2 = req.body.Cvc2

    fs.writeFile(filename, JSON.stringify(dataObject), function(err) {
        if (err) {
            return console.log(err);
        }
    });

    res.render('creditCardPayApproved', {
        title: 'Tower Mocks Transaction Approved',
        nextUrl: successUrl
    });
});


router.post('/retrievePaymentPage', function(req, res, next) {
    if (util.isUndefined(req.body.successURL) || !isURL(req.body.successURL)) {
        return next({ "message": "Invalid successURL", "status": 400 });
    }
    if (util.isUndefined(req.body.failURL) || !isURL(req.body.failURL)) {
        return next({ "message": "Invalid failURL", "status": 400 });
    }

    if (util.isUndefined(req.body.amount) || isNaN(req.body.amount)) {
        return next({ "message": "Amount format invalid", "status": 400 });
    }

    var requestKey = dateFormat(new Date(), "yyyymmddhhMMssl") + "CC_" + uuidv4();

    var filename = ccDataDir + requestKey + ".json";
    fs.writeFile(filename, JSON.stringify(req.body), function(err) {
        if (err) {
            return console.log(err);
        }
    });

    var paymentPage = {};
    paymentPage.url = dpsURL + "?request=" + requestKey;
    res.set({ 'Content-Type': 'application/json', 'Encodeing': 'utf8' })
    res.end(JSON.stringify(paymentPage, null, 2));


});


router.post('/submitPayment', function(req, res, next) {
    needle('post', dpsURL + req.originalUrl, req.body, options)
        .then(function(resp) {
            console.log(resp.body);
            console.log("resp.statusCode:" + resp.statusCode);
            res.set({ 'Content-Type': 'application/json', 'Encodeing': 'utf8' });
            res.status(resp.statusCode);
            res.end(JSON.stringify(resp.body, null, 2));
        })
<<<<<<< working copy
    .catch(function(err) { console.error(err) ; return next({"message": err, "status":500})});
});
=======
        .catch(function(err) { console.error(err); return next({ "message": err, "status": 500 }) });
})
>>>>>>> merge rev

<<<<<<< working copy
router.get('/getPaymentPageResult', function (req, res, next) {
    if (util.isUndefined(req.query.sourceSystem )){
        return next({"message":"Parameter sourceSystem is required", "status":400});
    }
    if (util.isUndefined(req.query.responseCode )){
        return next({"message":"Parameter responseCode is required", "status":400});
    }


    var result={};
    result.success=true;
    result.transactionId="";
    result.billingToken="";
    result.transactionReference="";
    result.creditCardNumber="";
    result.cardHolderName="";
    result.cardExpiryDate="";
    result.cardName="";
    result.message="";
    result.billingId="";
    result.policyId="";
    result.claimId="";
    res.set({'Content-Type':'application/json','Encodeing':'utf8'})
    res.end(JSON.stringify(result,null,2) );
=======
router.get('/getPaymentPageResult', function(req, res, next) {
    needle('get', dpsURL + req.originalUrl)
        .then(function(resp) {
            res.set({ 'Content-Type': 'application/json', 'Encodeing': 'utf8' });
            res.status(resp.statusCode);
            res.end(JSON.stringify(resp.body, null, 2));
        })
        .catch(function(err) { console.error(err); return next({ "message": err, "status": 500 }) });
>>>>>>> merge rev
});

module.exports = router;